//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""CoreGameControls"",
            ""id"": ""61db79d9-5871-4cf7-891d-27a558463c90"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""4e5fd080-de9e-4a2b-8337-d1299c7aa42c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""be4f1153-a6d7-405d-970b-9003e29a6215"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""402b8112-18b3-4419-b2b5-b59d8b266bfb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Button"",
                    ""id"": ""8c78c5b1-89b7-45a4-9027-ad595a4094ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""508ba375-d130-4add-8ea2-118147b9bcb2"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56900757-f397-477e-9fba-eb9874f1c20f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""528ba3d1-52c3-4ca5-b6eb-bced102f20e4"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15955850-7048-4c8c-ac2e-ed0af6683707"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WS"",
                    ""id"": ""aa3b1e10-8add-4507-8a2c-b734b8636163"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""753e0cee-30db-400b-873f-680092aaa818"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""188eee69-e571-478c-a669-03703850de15"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AD"",
                    ""id"": ""9d45bdba-6324-43e8-906a-60568ebf1d21"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""958857a7-4c82-4cc8-bcd5-4d112779a0a0"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""789ecfe3-58f6-482b-bf68-f6da2d04311d"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""RMB + MoveMosue"",
                    ""id"": ""d63f32e2-6a00-45c6-8416-d08cf19d811e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""8f0b42cb-b6c8-4536-aa3f-60eaafe4c7ad"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""0dd03c60-19cc-4a63-b617-119213cb0faf"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CoreGameControls
        m_CoreGameControls = asset.FindActionMap("CoreGameControls", throwIfNotFound: true);
        m_CoreGameControls_Interact = m_CoreGameControls.FindAction("Interact", throwIfNotFound: true);
        m_CoreGameControls_RotateCamera = m_CoreGameControls.FindAction("RotateCamera", throwIfNotFound: true);
        m_CoreGameControls_Zoom = m_CoreGameControls.FindAction("Zoom", throwIfNotFound: true);
        m_CoreGameControls_Movement = m_CoreGameControls.FindAction("Movement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CoreGameControls
    private readonly InputActionMap m_CoreGameControls;
    private ICoreGameControlsActions m_CoreGameControlsActionsCallbackInterface;
    private readonly InputAction m_CoreGameControls_Interact;
    private readonly InputAction m_CoreGameControls_RotateCamera;
    private readonly InputAction m_CoreGameControls_Zoom;
    private readonly InputAction m_CoreGameControls_Movement;
    public struct CoreGameControlsActions
    {
        private @Controls m_Wrapper;
        public CoreGameControlsActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_CoreGameControls_Interact;
        public InputAction @RotateCamera => m_Wrapper.m_CoreGameControls_RotateCamera;
        public InputAction @Zoom => m_Wrapper.m_CoreGameControls_Zoom;
        public InputAction @Movement => m_Wrapper.m_CoreGameControls_Movement;
        public InputActionMap Get() { return m_Wrapper.m_CoreGameControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CoreGameControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICoreGameControlsActions instance)
        {
            if (m_Wrapper.m_CoreGameControlsActionsCallbackInterface != null)
            {
                @Interact.started -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnInteract;
                @RotateCamera.started -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.performed -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.canceled -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnRotateCamera;
                @Zoom.started -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnZoom;
                @Movement.started -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CoreGameControlsActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_CoreGameControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @RotateCamera.started += instance.OnRotateCamera;
                @RotateCamera.performed += instance.OnRotateCamera;
                @RotateCamera.canceled += instance.OnRotateCamera;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public CoreGameControlsActions @CoreGameControls => new CoreGameControlsActions(this);
    public interface ICoreGameControlsActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
    }
}
